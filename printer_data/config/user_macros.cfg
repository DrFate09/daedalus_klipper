#####################################################################
# 	Start & End Print
#####################################################################

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    # Heat bed for probing
    M190 S{BED_TEMP}
    #G4 P300000
    # Use absolute coordinates
    G90
    # Home the printer
    #G28
    _CG28

    # If you are using Z-Tilt:
    Z_TILT_ADJUST

    # If you are generating a new bed mesh:
    BED_MESH_CALIBRATE ADAPTIVE=1
    ## NOTE:    The adaptive meshing feature requires exclude_object     ##
    ##      and may require 'Label Objects' to be enabled in the slicer  ##
    ##           To mesh without it just use BED_MESH_CALIBRATE          ##

    # If you are loading an existing mesh:
    #BED_MESH_PROFILE LOAD=default

    # Move the nozzle near the bed
    #G1 Z5 F3000

    SMART_PARK
    
    # Set and wait for nozzle to reach printing temperature
    M109 S{EXTRUDER_TEMP}

    LINE_PURGE

    # Start printing!

[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 30mm
    G1 Z30 F3000
    G90
    # Disable steppers
    #M84

#####################################################################
# 	Useful Macros
#####################################################################

[gcode_macro _CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}

[gcode_macro FAKE_POSITION]
gcode:
  SET_KINEMATIC_POSITION X=150 Y=150 Z=0

#####################################################################
# 	Argon Fan HAT Controls 
#####################################################################

[gcode_shell_command rpi_fan_100]
command: i2cset -y 1 0x01a 0x64
timeout: 30.
verbose: True

[gcode_shell_command rpi_fan_75]
command: i2cset -y 1 0x01a 0x33
timeout: 30.
verbose: True

[gcode_shell_command rpi_fan_50]
command: i2cset -y 1 0x01a 0x32
timeout: 30.
verbose: True

[gcode_shell_command rpi_fan_25]
command: i2cset -y 1 0x01a 0x19
timeout: 30.
verbose: True

[gcode_shell_command rpi_fan_off]
command: i2cset -y 1 0x01a 0x00
timeout: 30.
verbose: True

[gcode_macro RPI_FAN_100]
description: Argon Fan HAT, 100% fan speed
gcode:
    RUN_SHELL_COMMAND CMD=rpi_fan_100

[gcode_macro RPI_FAN_75]
description: Argon Fan HAT, 75% fan speed
gcode:
    RUN_SHELL_COMMAND CMD=rpi_fan_75

[gcode_macro RPI_FAN_50]
description: Argon Fan HAT, 50% fan speed
gcode:
    RUN_SHELL_COMMAND CMD=rpi_fan_50

[gcode_macro RPI_FAN_25]
description: Argon Fan HAT, 25% fan speed
gcode:
    RUN_SHELL_COMMAND CMD=rpi_fan_25

[gcode_macro RPI_FAN_OFF]
description: Argon Fan HAT, Off
gcode:
    RUN_SHELL_COMMAND CMD=rpi_fan_off

#####################################################################
# 	Klipper-Backup
#####################################################################

[gcode_macro update_git]
gcode:
    {% set message = params.MESSAGE|default() %}
    {% if message %}
        RUN_SHELL_COMMAND CMD=update_git_script_message PARAMS="'{params.MESSAGE}'"
    {% else %}
        RUN_SHELL_COMMAND CMD=update_git_script
    {% endif %}

[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True

[gcode_shell_command update_git_script_message]
command: bash -c "bash $HOME/klipper-backup/script.sh $0"
timeout: 90.0
verbose: True